IDOR  : Insecure Direct Object Reference
	 -> vulnerabilities in a web application giving you access to data that you shouldn't have

IDOR Example:
	http://online-service.thm/profile?user_id=1305, and you can see your information
	changing the user_id value to 1000 instead (http://online-service.thm/profile?user_id=1000), and to your surprise, you can now see another
	user's information

Finding IDORs in Encoded IDs:
	the id may be hashed with md5

Finding IDORs in Unpredictable IDs:
	If the Id cannot be detected and you can view the other users' content using their Id number while still being logged in with a different 
	account (or not logged in at all), you've found a valid IDOR vulnerability.
	-> create two accounts and swap the Id numbers between them

Where are IDORs located:
	-> the vulnerability not always be something you see in the address bar
	   It could be content your browser loads in via an AJAX request or something that you find referenced in a JavaScript file

	-> Sometimes endpoints could have an unreferenced parameter that may have been of some use during development and got pushed to 
	   production.For example, you may notice a call to /user/details displaying your user information (authenticated through your session). 
	   But through an attack known as parameter mining, you discover a parameter called user_id that you can use to display other users' 
	   information,for example, /user/details?user_id=123.
